<docker>
    - apache 설정이 힘들어서 container화 한다.
    
    $ sudo yum install -y yum-utils
        - yum-config-manager 로 stable한 repository를 만들기 위해 필요
    
    $ sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
        - 그냥 /etc/yum.repos.d/ 에 가져다 놓으면 되는거였군
    
    $ sudo yum install docker-ce --nobest
        - dependency가 있는 containerd.io 버전이 충분하지 않아서 --nobest 옵션 사용

    $ sudo docker run hello-world
        - 그러면 알아서 remote에서 다운로드 받아서 실행
    
    튜토리얼 따라하기
    //출처 : https://docs.docker.com/get-started/part2/
        $ git clone https://github.com/dockersamples/node-bulletin-board
        $ cd node-bulletin-board/bulletin-board-app
        $ sudo docker build --tag bulletinboard:1.0 .
        $ sudo docker run --publish 8000:8080 --detach --name bb bulletinboard:1.0

        $ curl 127.0.0.1:8000

        $ sudo docker rm --force bb
    
<code-server(linux server) by docker>
//출처 : https://hub.docker.com/r/linuxserver/code-server

    $ sudo docker crate \
    > --name=code-server \              -> container의 이름을 지정
    > -u "$(id -u):$(id -g)" \          -> 현재 사용자의 userid:groupid로 실행 
    > -e PASSWORD=dlaghdfhr \           -> 환경변수 설정
    > -p 8090:8443 \                    -> host의 8090으로 container의 config를 publish
    > -v ~/.config:/config \            -> host의 ~/.config를 /config에 연결
    > linuxserver/code-server           -> docker image
    - create는 image로 container를 생성한다.

    $ sudo docker start code-server
        - create 했으면 start 이다.
    $ sudo docker ps -a
        - STATUS : Exited (1) 4 seconds ago
    $ sudo docker logs code-server
        - s6-mkdir: warning: unable to mkdir /var/run/s6: Permission denied
        - user를 지정했더니 문제가 생기고 있다. root로 하자.
    
    $ sudo docker create
    > --name=code-server
    > -e PASSWORD:dlaghdfhr
    > -p 10.178.0.4:8090:8443
    > -v ~/code-server-docker:/config
    > linuxserver/code-server:latest
    - 성공

    $ sudo docker images
        - 이미지가 잘 생성되었군
    $ sudo docker ps -a
        - 컨테이너도 잘 생성되었군

<code-server(codercom) in docker>
    볼륨 생성
    $ sudo docker volume create cdr-vol

    실행
    $ sudo docker run                   -> image(local or remote)를 container로 실행하는 것
    > -d                                -> detached : console 출력 없이 실행
    > --name=code-server                -> container 이름
    > -p 10.178.0.5:8090:8080           -> publish
    > -v cdr-vol:/home/coder/project    -> volume wiring
    > -u "$(id -u):$(id -g)"            -> user
    > codercom/code-server:latest       -> image

    container 이름변경
    $ sudo docker [asis] [tobe]

    container bash 접속
    $ sudo docker exec -it code-server /bin/bash
        - interactive : Keep STDIN open even if not attached
        - tty : Allocate a pseudo-TTY

    container restart
    $ sudo docker restart code-server

<pgadmin in docker>
//출처 : https://www.pgadmin.org/docs/pgadmin4/latest/container_deployment.html

    pgadmin volume 생성
    $ sudo docker volume create pga-vol

    컨테이너 생성
    $ sudo docker run -d
    > --name=pgadmin4
    > -p 10.178.0.5:80:80
    > -e 'PGADMIN_DEFAULT_EMAIL=hongrr123@gmail.com'        -> mandatory
    > -e 'PGADMIN_DEFAULT_PASSWORD=ghdfhr'                  -> mandatory
    > -v pga-vol:/var/lib/pgadmin
    > dpage/pgadmin4:latest

    ssl파일 가져다놓기
    $ sudo docker volume inspect pga-vol
        - 여게서 volume 경로 확인
    
    알아서 client-cert, client-key, server-ca 가져다놓기

    $ sudo chown -R 5050:5050 ./ssl
    $ sudo chmod 600 *.pem

    database 비밀번호는 code-server 비밀번호와 같다

<java in docker>


200907 TODO list
- java project docker에서 돌리기

<docker ref>
    도커 이미지 원리
    //출처 : https://www.44bits.io/ko/post/how-docker-image-work

    볼륨과 마운트 차이
    //출처 : https://www.daleseo.com/docker-volumes-bind-mounts/

    spring boot 이미지 만들기
    //출처 : https://velog.io/@skygl/Docker-스프링-부트-사이트-가이드의-Docker-연동하는-명령어-이해하기